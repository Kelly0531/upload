fig = plt.figure(facecolor='white',figsize=(20,5))
ax1 = fig.add_subplot(1,2,1)
sns.distplot(df_S991_ALL_C.value,kde_kws={"label":"S991_ALL_C"},color="r",ax=ax1)
sns.distplot(df_S998.value,kde_kws={"label":"S998"},color="b",ax=ax1)
ax1.set_title(label='frequency', loc='center')
ax2 = fig.add_subplot(1,2,2)
sns.kdeplot(df_S991_ALL_C.value,cumulative=True,label="S991_ALL_C",color="r",ax=ax2)
sns.kdeplot(df_S998.value,cumulative=True,label="S998",color="b",ax=ax2)
ax2 set title(label='cumulative' loc='center')




import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
plt.rcParams['font.sans-serif']='SimHei'#设置中文显示

import seaborn as sns
sns.set(style="whitegrid",palette="muted", color_codes=True)

#为了在jupyter notebook里作图，需要用到这个命令
%matplotlib inline   

from sqlalchemy import create_engine
from urllib import quote_plus as urlquote

import traceback
import warnings
warnings.filterwarnings('ignore')

pd.set_option('max_columns',1000)
pd.set_option('max_row',300)
pd.set_option('display.float_format', lambda x: '%.5f' % x)



def get_sql(sql,engine):
    df = pd.read_sql(sql=sql,con = engine)
    print df.shape
    print df.columns
    return df
    
    
sql = '''
SELECT t1.`COMPANY_ID`
      ,t1.`ORDER_ID`
      ,DATE(t1.created_stamp) AS date
      ,DATE_FORMAT(t1.created_stamp,'%%Y-%%m') as yymm
      ,MONTH(DATE(t1.created_stamp)) as month
      ,YEAR(DATE(t1.created_stamp)) as year
      ,sum(t2.`ACTUAL_CURRENCY_AMOUNT`) as amount
FROM ofbiz.order_header t1
JOIN ofbiz.order_payment t2
ON t1.ORDER_ID = t2.ORDER_ID
JOIN ec_admin.PARTY_GROUP_GEO t3
ON t1.company_id = t3.party_id
LEFT JOIN ec_admin.party_group t4
ON t1.company_id = t4.id
WHERE t2.actual_currency_amount >= 0.01
AND t2.actual_currency_amount<=6000000
AND t1.company_id NOT IN ("ZDQL7blRgcYkehvzLJx","qV80ZU26BkEvQCjNeyG","PQVDbTECtqtL9RU3LM1","ojqQZRmNiaXqwaxQpnL",
"lKe1gf5KsQF2Qvr7lqa","k48dr6BDLfB1kk65HZl","4UT4HuPaG2MZPa440GU")
AND t1.product_store_id NOT IN ("XMHYSX01","TSJWL001","GZCDSX01","GZBSSX01","GZLRH001")
AND t1.created_stamp >= "2018-01-01"
AND t1.created_stamp <= "2019-12-31"
AND t1.status_id IN ("ORDER_APPROVED","ORDER_COMPLETED") 
group by t1.`COMPANY_ID`
,t1.`ORDER_ID`
,DATE(t1.created_stamp)
,DATE_FORMAT(t1.created_stamp,'%%Y-%%m')
,MONTH(DATE(t1.created_stamp))
,YEAR(DATE(t1.created_stamp)) 
'''
order = get_sql(sql,engine)






select cai.`cf_apply_no`,cai.`cust_name` AS "维修厂名称",
       cxemr.`ett_mem_code` AS "维修厂代码",
       CASE lbi.`fclt_code` WHEN 'PRODA05XIMU239557065838694400C' THEN "白条" WHEN 'PRODA05XIMU239619100458881024C' THEN "挂账" ELSE "" END AS "授信方式",
cai.`gds_acard_score` AS "初始A卡分",

crrx.`cf_amount` AS "模型给予额度",
crrx.`gds_desc` AS "模型给予额度描述",
lbi.cust_la AS "当前固定额度",
lbi.la_temp AS "当前临时额度",
bcard_score_tmp.bcard_score AS "B卡分数",
apply_count_tmp.apply_count AS "临额申请次数"
from `cf_apply_info` cai 
INNER JOIN `cust_xm_ett_mem_rel` cxemr ON cai.`mem_code`= cxemr.`xm_mem_code`
INNER JOIN `la_base_info` lbi ON lbi.`cf_apply_id`= cai.`id` and lbi.`fclt_code` = cai.`fclt_code` 
left JOIN (select * from (SELECT * FROM `cf_gds_result_record_ximu` order by `cr_date` asc) gds_tmp group by gds_tmp.cf_apply_no) crrx on crrx.`cf_apply_id` = cai.`id` 
left join (
select cust_code,GROUP_CONCAT(bcard_score) as bcard_score  from (
select  cust_code,bcard_score  from `dsbs_apply_info` dai where bcard_score is not null group by cust_code,bcard_score ORDER BY bcard_score asc
) tmp group by tmp.cust_code) bcard_score_tmp on bcard_score_tmp.cust_code = cai.`cust_code` 
left join (SELECT lbi.*,count(lacl.`id`) as apply_count FROM la_base_info lbi left join `la_amount_change_log` lacl on lacl.`la_id` = lbi.id  
           WHERE change_type in('ADD_TEMP','TEMP_EXPR') group by lbi.`cust_code`, lbi.`cf_apply_id` ,lbi.`fclt_code` ) apply_count_tmp on apply_count_tmp.cf_apply_id=lbi.`cf_apply_id` and apply_count_tmp.fclt_code=cai.`fclt_code` 
where cai.`delete_flag` = 0
order by cai.`cust_code` , cai.`fclt_code` 

# 授信额度
sql1 = """SELECT la_id,t1.cust_id,change_type,lat,cr_date,fclt_name FROM la_amount_change_log t0 
                        LEFT JOIN (SELECT id, cust_id,fclt_code FROM la_base_info)t1 ON t0.la_id = t1.id
                        LEFT JOIN (SELECT fclt_code,fclt_name FROM fclt_base_info)t2 ON t1.fclt_code=t2.fclt_code
                        WHERE change_type = 'ADD'"""
# 解冻
sql2 = """SELECT la_id,laf,submit_time,cust_id,fclt_name FROM la_unfreeze_record t0 
                        LEFT JOIN (SELECT id, cust_id,fclt_code FROM la_base_info)t1 ON t0.la_id = t1.id
                        LEFT JOIN (SELECT fclt_code,fclt_name FROM fclt_base_info)t2 ON t1.fclt_code=t2.fclt_code"""
# 临额
sql3 = """SELECT la_id,la_temp,la_temp_resource,submit_time,cust_id,fclt_name FROM la_temporary_record t0 
                        LEFT JOIN (SELECT id, cust_id,fclt_code FROM la_base_info)t1 ON t0.la_id = t1.id
                        LEFT JOIN (SELECT fclt_code,fclt_name FROM fclt_base_info)t2 ON t1.fclt_code=t2.fclt_code"""
# 冻额
sql4 = """SELECT la_id,laf,approve_time,cust_id,fclt_name FROM la_freeze_record t0 
                        LEFT JOIN (SELECT id, cust_id,fclt_code FROM la_base_info)t1 ON t0.la_id = t1.id
                        LEFT JOIN (SELECT fclt_code,fclt_name FROM fclt_base_info)t2 ON t1.fclt_code=t2.fclt_code"""
# 固额
sql5 = """SELECT la_id,change_fixed_la,la_resource,approve_time,cust_id,fclt_name FROM la_fixed_change_record t0 
                        LEFT JOIN (SELECT id, cust_id,fclt_code FROM la_base_info)t1 ON t0.la_id = t1.id
                        LEFT JOIN (SELECT fclt_code,fclt_name FROM fclt_base_info)t2 ON t1.fclt_code=t2.fclt_code"""








